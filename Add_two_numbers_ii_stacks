// https://leetcode.com/problems/add-two-numbers-ii/solution/
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        Stack<ListNode> s1 = new Stack<>();
        Stack<ListNode> s2 = new Stack<>();
        Stack<ListNode> s3 = new Stack<>();
        int val1 = 0, val2 = 0;
        int carry = 0;
        
        while(l1!= null) {
            s1.push(l1);
            l1 = l1.next;
        }
        
        while(l2!= null) {
            s2.push(l2);
            l2 = l2.next;
        }
        
        while(!s1.isEmpty() || !s2.isEmpty()) {
            val1 = s1.isEmpty() ? 0: s1.pop().val;
            val2 = s2.isEmpty() ? 0: s2.pop().val;
            
            int sum = val1 + val2 + carry;
            carry = sum / 10;
            s3.push(new ListNode(sum % 10));
        }
        
        if(carry != 0) {
            s3.push(new ListNode(carry));
        }
        
        ListNode newHead = null;
        ListNode prev = null;
        while(!s3.isEmpty()) {
            ListNode temp = s3.pop();
            if(newHead == null) {
                newHead = temp;
                prev = temp;
            } else {
                prev.next = temp;
                prev = prev.next; 
            }
        }
        
        return newHead;
    }
}
